CREATE TABLE prd_produtos
(
	prd_id SERIAL PRIMARY KEY,
    prd_nome VARCHAR(30) NOT NULL,
    prd_codigo VARCHAR(50) DEFAULT '-'
);


UM PRODUTO TEM UMA UNIDADE DE MEDIDA
A CARDINALIDADE (1)
UMA UNIDADE DE MEDIDA PODE TER VARIAS
PRODUTOS
A CARDINALIDAE (N)


CREATE TABLE unm_unidades_medida
(
	unm_id SERIAL PRIMARY KEY,
    unm_nome VARCHAR(30),
    unm_sigla VARCHAR(5) NOT NULL
);

ALTER TABLE prd_produtos
ADD COLUMN unm_id INT NOT NULL



INSERT INTO unm_unidades_medida
(unm_nome, unm_sigla)
VALUES
('Quilograma', 'Kg');


INSERT INTO prd_produtos
(prd_nome, prd_codigo, unm_id)
VALUES
('Carne', '1234',1);


SELECT * FROM prd_produtos;



SELECT * FROM unm_unidades_medida;

INSERT INTO prd_produtos
(prd_nome, prd_codigo, unm_id)
VALUES
('Bolacha', '3456A',2);


SELECT * FROM prd_produtos;




SELECT * FROM prd_produtos;

REMOVER TUPLAS DE UMA TABELA
DELETE FROM prd_produtos WHERE prd_id = 3;



foreign key para validade a chave estrangeira

ALTER TABLE prd_produtos
ADD CONSTRAINT fk_prd_produtos__unm_unidades_medida__unm_id 
FOREIGN KEY(unm_id) REFERENCES unm_unidades_medida(unm_id);



ALTER TABLE prd_produtos CHANGE COLUMN unm_id unm_id BIGINT UNSIGNED NOT NULL;






INSERT INTO unm_unidades_medida
(unm_nome, unm_sigla)
VALUES
('Pacote', 'Pc');



INSERT INTO prd_produtos
(prd_nome, prd_codigo, unm_id)
VALUES
('Bolacha', '3456A',2);





CREATE TABLE cmp_compras
(
	cmp_id SERIAL PRIMARY KEY,
    cmp_data_hora DATETIME NOT NULL DEFAULT NOW(),
    cmp_valor_pago DECIMAL(8,2) NOT NULL,
    cli_id BIGINT UNSIGNED NOT NULL,
    FOREIGN KEY (cli_id) REFERENCES cli_clientes(cli_id)
);






CREATE TABLE cmp_prd_compras_produtos
(
	prd_id BIGINT UNSIGNED NOT NULL,
    cmp_id BIGINT UNSIGNED NOT NULL,
    cmp_prd_quantidade INT NOT NULL,
    cmp_prd_preco DECIMAL(8,2) NOT NULL,
    PRIMARY KEY(prd_id, cmp_id),
    FOREIGN KEY (prd_id) REFERENCES prd_produtos(prd_id),
    FOREIGN KEY (cmp_id) REFERENCES cmp_compras(cmp_id)      
);





SELECT * FROM cli_clientes;
SELECT * FROM cmp_compras;

SELECT * 
FROM cli_clientes, cmp_compras;

INSERT INTO cmp_compras
(cmp_data_hora, cmp_valor_pago, cli_id)
VALUES
(NOW(), 150.00,1);


INSERT INTO cmp_compras
(cmp_data_hora, cmp_valor_pago, cli_id)
VALUES
(NOW(), 75.00,2);




SELECT * 
FROM cli_clientes, cmp_compras
WHERE cli_clientes.cli_id = cmp_compras.cli_id;




SELECT cli_clientes.cli_nome, cli_clientes.cli_cpf, 
cmp_compras.cmp_data_hora, cmp_compras.cmp_valor_pago
FROM cli_clientes, cmp_compras
WHERE cli_clientes.cli_id = cmp_compras.cli_id;



SELECT cli.cli_nome, cli.cli_cpf, 
cmp.cmp_data_hora, cmp.cmp_valor_pago
FROM cli_clientes AS cli, cmp_compras AS cmp
WHERE cli.cli_id = cmp.cli_id;



SELECT cli.cli_nome, cli.cli_cpf, 
cmp.cmp_data_hora, cmp.cmp_valor_pago
FROM cli_clientes AS cli, cmp_compras AS cmp
WHERE cli.cli_id = cmp.cli_id;


as e oopicional
SELECT cli.cli_nome, cli.cli_cpf, 
cmp.cmp_data_hora, cmp.cmp_valor_pago
FROM cli_clientes  cli, cmp_compras  cmp
WHERE cli.cli_id = cmp.cli_id;





usando joins para consulta
SELECT cli.cli_nome, cli.cli_cpf
	FROM cli_clientes cli 
INNER JOIN cmp_compras cmp
	ON cli.cli_id = cmp.cli_id;



usando joins para consulta
SELECT cli.cli_nome, cli.cli_cpf, cmp.cmp_data_hora, cmp.cmp_valor_pago
	FROM cli_clientes cli 
INNER JOIN cmp_compras cmp
	ON cli.cli_id = cmp.cli_id;




usando joins para consulta
SELECT cli.cli_nome, cli.cli_cpf, cmp.cmp_data_hora, cmp.cmp_valor_pago
	FROM cli_clientes cli 
INNER JOIN cmp_compras cmp
	ON cli.cli_id = cmp.cli_id
WHERE cmp.cmp_valor_pago > 100;





peso maior para tabela da esquerda
left join

SELECT cli.cli_nome, cli.cli_cpf, cmp.cmp_data_hora, 
cmp.cmp_valor_pago
	FROM cli_clientes cli
LEFT JOIN  cmp_compras cmp
	ON cli.cli_id = cmp.cli_id;



SELECT cli.cli_nome, 
		cli.cli_cpf, 
		cmp.cmp_data_hora, 
		COALESCE(cmp.cmp_valor_pago,0)
	FROM cli_clientes cli
LEFT JOIN  cmp_compras cmp
	ON cli.cli_id = cmp.cli_id;




SELECT cli.cli_nome, 
		cli.cli_cpf, 
		cmp.cmp_data_hora, 
		COALESCE(cmp.cmp_valor_pago,0)
	FROM cli_clientes cli
LEFT JOIN  cmp_compras cmp
	ON cli.cli_id = cmp.cli_id
WHERE cmp.cmp_data_hora IS NULL;




SELECT cli.cli_nome, 
		cli.cli_cpf, 
		cmp.cmp_data_hora, 
		COALESCE(cmp.cmp_valor_pago,0)
	FROM cmp_compras cmp
RIGHT JOIN  cli_clientes cli
	ON cli.cli_id = cmp.cli_id;




funcoes sumarisadoras
sumarizar informacoes

SELECT cli.cli_nome, SUM(cmp.cmp_valor_pago)
	FROM cli_clientes cli
LEFT JOIN  cmp_compras cmp
	ON cli.cli_id = cmp.cli_id
GROUP BY cli.cli_id;



SELECT cli.cli_nome, COALESCE(SUM(cmp.cmp_valor_pago),0)
	FROM cli_clientes cli
LEFT JOIN  cmp_compras cmp
	ON cli.cli_id = cmp.cli_id
GROUP BY cli.cli_id;






SELECT cli.cli_nome, 
		COALESCE(SUM(cmp.cmp_valor_pago),0),
		COUNT(*)
	FROM cli_clientes cli
LEFT JOIN  cmp_compras cmp
	ON cli.cli_id = cmp.cli_id
GROUP BY cli.cli_id;





SELECT cli.cli_nome, 
		COALESCE(SUM(cmp.cmp_valor_pago),0),
		COUNT(cmp.cmp_id)
	FROM cli_clientes cli
LEFT JOIN  cmp_compras cmp
	ON cli.cli_id = cmp.cli_id
GROUP BY cli.cli_id;








funcoes sumarisadoras
sumarizar informacoes

SELECT cli.cli_nome, 
		COALESCE(SUM(cmp.cmp_valor_pago),0),
		COUNT(cmp.cmp_id)
	FROM cli_clientes cli
LEFT JOIN  cmp_compras cmp
	ON cli.cli_id = cmp.cli_id
GROUP BY cli.cli_id;



SELECT * FROM cmp_compras;
SELECT * FROM prd_produtos;

DESC cmp_prd_compras_produtos;

INSERT INTO cmp_prd_compras_produtos
(prd_id, cmp_id, cmp_prd_quantidade, cmp_prd_preco)
VALUES
(1,1,2,50);



INSERT INTO cmp_prd_compras_produtos
(prd_id, cmp_id, cmp_prd_quantidade, cmp_prd_preco)
VALUES
(3,1,1,30.5);



DESC cmp_prd_compras_produtos;

INSERT INTO cmp_prd_compras_produtos
(prd_id, cmp_id, cmp_prd_quantidade, cmp_prd_preco)
VALUES
(1,1,2,50);
INSERT INTO cmp_prd_compras_produtos
(prd_id, cmp_id, cmp_prd_quantidade, cmp_prd_preco)
VALUES
(1,2,1,30.50);









SELECT cli.cli_nome, 
		COALESCE(SUM(cmp.cmp_valor_pago),0),
		COUNT(cmp.cmp_id)
	FROM cli_clientes cli
LEFT JOIN  cmp_compras cmp
	ON cli.cli_id = cmp.cli_id
INNER JOIN cmp_prd_compras_produtos cmp_prd
	ON cmp.cmp_id = cmp_prd.cmp_id
INNER JOIN  prd_produtos prd
	ON cmp_prd.prd_id = prd.prd_id
GROUP BY cli.cli_id;





SELECT * 
	 FROM cli_clientes cli
LEFT JOIN  cmp_compras cmp
	ON cli.cli_id = cmp.cli_id
INNER JOIN cmp_prd_compras_produtos cmp_prd
	ON cmp.cmp_id = cmp_prd.cmp_id
INNER JOIN  prd_produtos prd;



SELECT cli.cli_nome, 
		COALESCE(SUM(cmp.cmp_valor_pago),0),
		COUNT(DISTINCT(cmp.cmp_id))
	FROM cli_clientes cli
LEFT JOIN  cmp_compras cmp
	ON cli.cli_id = cmp.cli_id
INNER JOIN cmp_prd_compras_produtos cmp_prd
	ON cmp.cmp_id = cmp_prd.cmp_id
INNER JOIN  prd_produtos prd
	ON cmp_prd.prd_id = prd.prd_id
GROUP BY cli.cli_id;









SELECT cli.cli_nome, 
		COALESCE(SUM(DISTINCT(cmp.cmp_valor_pago)),0),
		COUNT(DISTINCT(cmp.cmp_id))
	FROM cli_clientes cli
LEFT JOIN  cmp_compras cmp
	ON cli.cli_id = cmp.cli_id
INNER JOIN cmp_prd_compras_produtos cmp_prd
	ON cmp.cmp_id = cmp_prd.cmp_id
INNER JOIN  prd_produtos prd
	ON cmp_prd.prd_id = prd.prd_id
GROUP BY cli.cli_id;












SELECT cli.cli_nome, 
		COALESCE(SUM(DISTINCT(cmp.cmp_valor_pago)),0),
		COUNT(DISTINCT(cmp.cmp_id)),
        AVG(cmp_prd.cmp_prd_quantidade*cmp_prd.cmp_prd_preco)
	FROM cli_clientes cli
LEFT JOIN  cmp_compras cmp
	ON cli.cli_id = cmp.cli_id
INNER JOIN cmp_prd_compras_produtos cmp_prd
	ON cmp.cmp_id = cmp_prd.cmp_id
INNER JOIN  prd_produtos prd
	ON cmp_prd.prd_id = prd.prd_id
GROUP BY cli.cli_id;





SELECT cli.cli_nome, 
		COALESCE(SUM(DISTINCT(cmp.cmp_valor_pago)),0) valor_pago,
		COUNT(DISTINCT(cmp.cmp_id)) quantidade_compras,
        AVG(cmp_prd.cmp_prd_quantidade*cmp_prd.cmp_prd_preco) media_preco_produto
	FROM cli_clientes cli
LEFT JOIN  cmp_compras cmp
	ON cli.cli_id = cmp.cli_id
INNER JOIN cmp_prd_compras_produtos cmp_prd
	ON cmp.cmp_id = cmp_prd.cmp_id
INNER JOIN  prd_produtos prd
	ON cmp_prd.prd_id = prd.prd_id
GROUP BY cli.cli_id;




SELECT cli.cli_nome, 
		COALESCE(SUM(DISTINCT(cmp.cmp_valor_pago)),0) valor_pago,
		COUNT(DISTINCT(cmp.cmp_id)) quantidade_compras,
        AVG(cmp_prd.cmp_prd_quantidade*cmp_prd.cmp_prd_preco) media_preco_produto
	FROM cli_clientes cli
LEFT JOIN  cmp_compras cmp
	ON cli.cli_id = cmp.cli_id
INNER JOIN cmp_prd_compras_produtos cmp_prd
	ON cmp.cmp_id = cmp_prd.cmp_id
INNER JOIN  prd_produtos prd
	ON cmp_prd.prd_id = prd.prd_id
GROUP BY cli.cli_id
HAVING COUNT(cmp_prd.cmp_id) > 1;
